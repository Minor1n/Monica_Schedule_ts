import {Context} from "telegraf";
import {bot} from "@index";
import config from "@config";
import type ICommand from "@interfaces/ICommand";

export default {
    name: "profile",
    execute: async function(ctx:Context){
        const chatId = ctx.chat?.id;
        if (!chatId) {
            return;
        }
        const user = bot.users.getUser(chatId)
        if (!user) {
            await ctx.reply(config.notfoundMessages.user);
            return;
        }
        const { groupName, id, name } = user.info;
        const refKey = user.payment.referral.key;
        const refBonus = config.paymentMessages.refBonus(user.info.id, user.payment.referral.agentsApprove);
        const paymentStatus = config.payment.get(user.payment.status);
        const priceWithBonus = Math.floor(user.payment.price - (user.payment.price * (refBonus / 100)));
        const message = [
            `–ì—Ä—É–ø–ø–∞: <b>${groupName}</b>`,
            `Id: üîó<code>${id}</code>`,
            `–§–∞–º–∏–ª–∏—è: <b>${name}</b>`,
            `–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: <b>${paymentStatus}</b>`,
            `–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã —Å —É—á–µ—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏: <b>${priceWithBonus}</b>`,
            `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–ª—é—á: üîó<code>${refKey}</code>`,
            `–ë–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>${refBonus}%</b>`,
            `–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º: @a_korop`
        ];
        await ctx.reply(message.join('\n'), { parse_mode: 'HTML' });
    }
} satisfies ICommand;